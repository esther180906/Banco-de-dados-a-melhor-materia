DELIMITER //
CREATE PROCEDURE sp_ListarAutores()
BEGIN
  SELECT * FROM Autor;
END;
//
DELIMITER ;

CALL sp_ListarAutores();


DELIMITER //
CREATE PROCEDURE sp_LivrosPorCategoria(IN categoriaNome VARCHAR(100))
BEGIN
  SELECT Livro.Titulo
  FROM Livro
  INNER JOIN Categoria ON Livro.Categoria_ID = Categoria.Categoria_ID
  WHERE Categoria.Nome = categoriaNome;
END;
//
DELIMITER ;

CALL sp_LivrosPorCategoria('Ficção Científica');


DELIMITER //
CREATE PROCEDURE sp_ContarLivrosPorCategoria(IN categoriaNome VARCHAR(100), OUT totalLivros INT)
BEGIN
  SELECT COUNT(*) INTO totalLivros
  FROM Livro
  INNER JOIN Categoria ON Livro.Categoria_ID = Categoria.Categoria_ID
  WHERE Categoria.Nome = categoriaNome;
END;
//
DELIMITER ;

DECLARE @total INT;
CALL sp_ContarLivrosPorCategoria('Ficção Científica', @total);
SELECT @total;


DELIMITER //
CREATE PROCEDURE sp_VerificarLivrosCategoria(IN categoriaNome VARCHAR(100), OUT possuiLivros BOOLEAN)
BEGIN
  DECLARE total INT;
  CALL sp_ContarLivrosPorCategoria(categoriaNome, total);
  
  IF total > 0 THEN
    SET possuiLivros = TRUE;
  ELSE
    SET possuiLivros = FALSE;
  END IF;
END;
//
DELIMITER ;

DECLARE @temLivros BOOLEAN;
CALL sp_VerificarLivrosCategoria('Ficção Científica', @temLivros);
SELECT @temLivros;


DELIMITER //
CREATE PROCEDURE sp_LivrosAteAno(IN anoLimite INT)
BEGIN
  SELECT Titulo, Ano_Publicacao
  FROM Livro
  WHERE Ano_Publicacao <= anoLimite;
END;
//
DELIMITER ;

CALL sp_LivrosAteAno(2020);


DELIMITER //
CREATE PROCEDURE sp_TitulosPorCategoria(IN categoriaNome VARCHAR(100))
BEGIN
  SELECT Livro.Titulo
  FROM Livro
  INNER JOIN Categoria ON Livro.Categoria_ID = Categoria.Categoria_ID
  WHERE Categoria.Nome = categoriaNome;
END;
//
DELIMITER ;

CALL sp_TitulosPorCategoria('Ficção Científica');
